<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://netgrif.github.io/petriflow/petriflow.schema.xsd">
	<id>kafetakEshop</id>
	<initials>KE</initials>
	<title>Kafeťák</title>
	<defaultRole>true</defaultRole>
	<transitionRole>false</transitionRole>
	<!-- TRANSACTIONS -->
	<!-- ROLES -->
	<role>
		<id>pouzivatel</id>
		<title>Používateľ</title>
	</role>
	<role>
		<id>praziar</id>
		<title>Pražiar</title>
	</role>
	<role>
		<id>system</id>
		<title>Systém</title>
	</role>
	<!-- PROCESS ROLE REFS -->
	<!-- PROCESS USER REFS -->
	<!-- DATA -->
	<data type="multichoice_map">
		<id>ponuka_kav</id>
		<title></title>
	</data>
	<data type="taskRef">
		<id>taskRef_0</id>
		<title></title>
		<init>t38</init>
	</data>
	<data type="enumeration_map">
		<id>kos1</id>
		<title>Váš košík</title>
		<view>
			<list/>
		</view>
	</data>
	<data type="taskRef">
		<id>taskRef_2</id>
		<title></title>
		<init>t45</init>
	</data>
	<data type="enumeration">
		<id>sposob_platby</id>
		<title>Spôsob platby</title>
		<values>Platba prevodom na účet</values>
		<values>Platba kreditnou kartou</values>
		<view>
			<list/>
		</view>
	</data>
	<data type="number">
		<id>rozpocet</id>
		<title>Rozpočet</title>
	</data>
	<data type="number">
		<id>cena_za_kavu</id>
		<title>Cena na zaplatenie</title>
	</data>
	<data type="text">
		<id>vyjadrenie_o_overeni</id>
		<title>Vyjadrenie o overení</title>
		<values>area</values>
	</data>
	<data type="boolean">
		<id>tel_cislo_bool</id>
		<title>Pridať Tel. č.</title>
		<init>false</init>
	</data>
	<data type="text">
		<id>tel_cislo</id>
		<title>Telefónne číslo</title>
	</data>
	<data type="enumeration">
		<id>poziadavky_id</id>
		<title>Požiadavky</title>
		<view>
			<list/>
		</view>
	</data>
	<data type="text">
		<id>cislo_uctu</id>
		<title>Číslo účtu</title>
	</data>
	<data type="number">
		<id>var_symbol</id>
		<title>Variabilný symbol</title>
	</data>
	<data type="number">
		<id>konst_symbol</id>
		<title>Konštantný symbol</title>
	</data>
	<data type="number">
		<id>cislo_kred_karty</id>
		<title>Číslo kreditnej karty</title>
	</data>
	<data type="number">
		<id>platnost_karty_do</id>
		<title>Platnosť do</title>
	</data>
	<data type="number">
		<id>bezp_kod</id>
		<title>Bezpečnostný kód</title>
	</data>
	<data type="text">
		<id>nova_poziadavka</id>
		<title>Pridať novú požiadavku pre pražiara</title>
		<values>area</values>
	</data>
	<data type="taskRef">
		<id>taskRef_1</id>
		<title></title>
		<init>t39</init>
	</data>
	<data type="taskRef">
		<id>coffee_create_taskref</id>
		<title></title>
	</data>
	<data type="taskRef">
		<id>poziadavka_create_taskref</id>
		<title></title>
	</data>
	<data type="enumeration_map">
		<id>test</id>
		<title>Košík</title>
		<view>
			<list/>
		</view>
	</data>
	<!-- I18NS -->
	<!-- TRANSITIONS -->
	<transition>
		<id>t65</id>
		<x>620</x>
		<y>140</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Zobrazenie objednavok</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<roleRef>
			<id>praziar</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>test</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>t43</id>
		<x>1060</x>
		<y>300</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>kartou</label>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
	</transition>
	<transition>
		<id>t41</id>
		<x>1060</x>
		<y>140</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>prevodom</label>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
	</transition>
	<transition>
		<id>t33</id>
		<x>620</x>
		<y>820</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Zobrazenie požiadavok</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<roleRef>
			<id>praziar</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>poziadavky_id</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>zobrazenie_finish1</id>
			<actions phase="pre">
				<action>
					poziadavky: f.poziadavky_id;

					def cases = findCases( {it.processIdentifier.eq("6183c1a50a975a0f8cb2031c_poziadavka")} );

					for (caze in cases) {
						change poziadavky choices { return poziadavky.choices + [caze.dataSet.get("poziadavka").value]}
					}
				</action>
			</actions>
		</event>
		<event type="cancel">
			<id>zobrazenie_finish2</id>
			<actions phase="post">
				<action>
					poziadavky: f.poziadavky_id;

					change poziadavky choices {[]}
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>zobrazenie_finish3</id>
			<actions phase="post">
				<action>
					poziadavky: f.poziadavky_id;

					change poziadavky choices {[]}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t27</id>
		<x>620</x>
		<y>620</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Požiadavka pražiarovi</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>poziadavka_create_taskref</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>Add_poziadavka_assign</id>
			<actions phase="post">
				<action>
					poziadavka_create_taskref: f.poziadavka_create_taskref;

					def new_poziadavka_instance = createCase("6183c1a50a975a0f8cb2031c_poziadavka")

					if (new_poziadavka_instance == null) {
						return
					}

					def poziadavka_create_task = findTask({it.caseId.eq(new_poziadavka_instance.stringId).and(it.transitionId.eq("t_create"))})

					if(poziadavka_create_task == null) {
						return
					}

					assignTask(poziadavka_create_task)

					change poziadavka_create_taskref value { [poziadavka_create_task.stringId]; }

				</action>
			</actions>
		</event>
		<event type="cancel">
			<id>Add_poziadavka_cancel</id>
			<actions phase="post">
				<action>
				poziadavka_create_taskref: f.poziadavka_create_taskref;

				if(poziadavka_create_taskref.value == null || poziadavka_create_taskref.value == []) {
					return
				}

				def poziadavka_create_to_cancel = findTask({it._id.eq(poziadavka_create_taskref.value.first())})
				if(poziadavka_create_to_cancel == null) {
					change poziadavka_create_taskref value { [] }
					return
				}

				cancelTask(poziadavka_create_to_cancel)

				change poziadavka_create_taskref value { [] }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>t6_finish_WEWEEWE</id>
			<actions phase="post">
				<action>
					poziadavka_create_taskref: f.poziadavka_create_taskref;

					def new_created_poziadavka_task = findTask({it._id.eq(poziadavka_create_taskref.value.first())})
					if(new_created_poziadavka_task == null) {
						return
					}

					finishTask(new_created_poziadavka_task)

					change poziadavka_create_taskref value { [] }
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t8</id>
		<x>620</x>
		<y>380</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Pokračovať na platbu</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>taskRef_2</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>t6</id>
		<x>340</x>
		<y>380</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Výber kávy</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>taskRef_0</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>t6_finish</id>
			<actions phase="pre">
				<action>
					ponuka_kav: f.ponuka_kav;

					def cases = findCases( {it.processIdentifier.eq("6183c1a50a975a0f8cb2031c_kava")} );

					for (caze in cases) {
						change ponuka_kav options { return ponuka_kav.options + [(caze.stringId):(caze.dataSet.get("krajina_povodu").value + "  -  " + caze.dataSet.get("vaha").value + "g,  " + caze.dataSet.get("cena").value + "€,  " + caze.dataSet.get("odroda").value)]}
					}
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>t6_finish_swewss</id>
			<actions phase="post">
				<action>
					ponuka_kav: f.ponuka_kav,
					test: f.test;

					def selected_coffee_ids = ponuka_kav.value;

					for (def opt in selected_coffee_ids) {
						def curr_coffee_case = findCase( { it._id.eq(opt) } )

						if(curr_coffee_case == null) {
							continue
						}

						change test options {
							return test.options + [(curr_coffee_case.stringId):(curr_coffee_case.dataSet.get("krajina_povodu").value + "  -  " + curr_coffee_case.dataSet.get("vaha").value + "g,  " + curr_coffee_case.dataSet.get("cena").value + "€,  " + curr_coffee_case.dataSet.get("odroda").value)];
						}

						//change test options {
						//	return [(curr_coffee_case.stringId):(curr_coffee_case.dataSet.get("krajina_povodu").value + "  -  " + curr_coffee_case.dataSet.get("vaha").value + "g,  " + curr_coffee_case.dataSet.get("cena").value + "€,  " + curr_coffee_case.dataSet.get("odroda").value)];
						//}
					}

					change ponuka_kav options {[:]}
					change ponuka_kav value {null}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t5</id>
		<x>100</x>
		<y>380</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Spustenie e-shopu</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<roleRef>
			<id>praziar</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
	</transition>
	<transition>
		<id>t14</id>
		<x>340</x>
		<y>300</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Vybrať ďalšiu kávu</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
	</transition>
	<transition>
		<id>t20</id>
		<x>900</x>
		<y>380</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Spôsob platby</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>sposob_platby</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>rozpocet</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>tel_cislo_bool</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="set">t20: t.t20,
text_0: f.tel_cislo,
boolean_0: f.tel_cislo_bool;

make text_0, editable on t20 when {
     return boolean_0.value == true;
}

make text_0, hidden on t20 when {
     return boolean_0.value == false;
}
</action>
				</logic>
				<layout>
					<x>0</x>
					<y>3</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance></appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>tel_cislo</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>3</y>
					<rows>1</rows>
					<cols>3</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>t20_finish</id>
			<actions phase="post">
				<action>sposob_platby: f.sposob_platby;

if (sposob_platby.value == "Platba prevodom na účet") {
    async.run{
        assignTask("t41")
        finishTask("t41")
    }
} else {
    async.run{
        assignTask("t43")
        finishTask("t43")
    }
}
</action>
			</actions>
		</event>
		<event type="assign">
			<id>t20_assign</id>
		</event>
	</transition>
	<transition>
		<id>t21</id>
		<x>1420</x>
		<y>140</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Platba prevodom na účet</label>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>cislo_uctu</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>var_symbol</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>konst_symbol</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>t21_finish</id>
			<actions phase="post">
				<action>async.run{
    assignTask("t23")
    finishTask("t23")
}
</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t22</id>
		<x>1420</x>
		<y>300</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Platba kreditnou kartou</label>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>cislo_kred_karty</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>platnost_karty_do</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>bezp_kod</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>t22_finish</id>
			<actions phase="post">
				<action>
				async.run{
					assignTask("t23")
					finishTask("t23")
				}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t23</id>
		<x>1580</x>
		<y>220</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Overenie platby</label>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>rozpocet</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>cena_za_kavu</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>t23_assign</id>
		</event>
		<event type="finish">
			<id>t23_finish</id>
			<actions phase="post">
				<action>
					test: f.test,
					text_3: f.vyjadrenie_o_overeni,
					cena: f.cena_za_kavu,
					rozpocet: f.rozpocet;

					def c = 0.0
					def keys = test.options?.keySet()
					for(key in keys){
						def caze = findCase( {it._id.eq(key)} );
						c = c + caze.dataSet.get("cena").value
					}

					if (c &gt; rozpocet.value) {
						change text_3 value { "Objednávka zamietnutá z dôvodu, že cena je vyššia než Váš rozpočet." }
						async.run {
							assignTask("t62")
							finishTask("t62")
						}
					} else {
						change text_3 value { "Objednávka úspešne vytvorená." }
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t30</id>
		<x>1580</x>
		<y>500</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Vybavenie objednávky pražiarom</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>praziar</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>vyjadrenie_o_overeni</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>t37</id>
		<x>220</x>
		<y>140</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Pridať kávu do ponuky</label>
		<roleRef>
			<id>praziar</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>coffee_create_taskref</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>Add_coffee_assign</id>
			<actions phase="post">
				<action>
					coffee_create_taskref: f.coffee_create_taskref;

					def new_coffee_instance = createCase("6183c1a50a975a0f8cb2031c_kava")
					if (new_coffee_instance == null) {
						return
					}

					def coffee_create_task = findTask({it.caseId.eq(new_coffee_instance.stringId).and(it.transitionId.eq("t_create"))})
					if(coffee_create_task == null) {
						return
					}

					assignTask(coffee_create_task)

					change coffee_create_taskref value { [coffee_create_task.stringId]; }

				</action>
			</actions>
		</event>
		<event type="cancel">
			<id>Add_coffee_cancel</id>
			<actions phase="post">
				<action>
				coffee_create_taskref: f.coffee_create_taskref;

				if(coffee_create_taskref.value == null || coffee_create_taskref.value == []) {
					return
				}

				def coffee_create_to_cancel = findTask({it._id.eq(coffee_create_taskref.value.first())})
				if(coffee_create_to_cancel == null) {
					change coffee_create_taskref value { [] }
					return
				}

				cancelTask(coffee_create_to_cancel)

				change coffee_create_taskref value { [] }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>Add_coffee_finish</id>
			<actions phase="post">
				<action>
					coffee_create_taskref: f.coffee_create_taskref;

					def new_created_coffee_task = findTask({it._id.eq(coffee_create_taskref.value.first())})
					if(new_created_coffee_task == null) {
						return
					}

					finishTask(new_created_coffee_task)

					change coffee_create_taskref value { [] }
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>t38</id>
		<x>220</x>
		<y>60</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Ponuka</label>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>ponuka_kav</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>t62</id>
		<x>1740</x>
		<y>340</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Zamietnutie</label>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>vyjadrenie_o_overeni</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>t64</id>
		<x>1900</x>
		<y>220</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Prezrieť vyjadenie</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>pouzivatel</id>
			<logic>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup</id>
			<layout>grid</layout>
			<dataRef>
				<id>vyjadrenie_o_overeni</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<!-- PLACES -->
	<place>
		<id>p35</id>
		<x>1260</x>
		<y>300</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p34</id>
		<x>1260</x>
		<y>140</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p29</id>
		<x>620</x>
		<y>700</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p9</id>
		<x>740</x>
		<y>380</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p8</id>
		<x>460</x>
		<y>380</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p5</id>
		<x>20</x>
		<y>380</y>
		<label></label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p18</id>
		<x>900</x>
		<y>220</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p19</id>
		<x>1580</x>
		<y>340</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p22</id>
		<x>220</x>
		<y>380</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p26</id>
		<x>1580</x>
		<y>620</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p30</id>
		<x>1420</x>
		<y>220</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p54</id>
		<x>620</x>
		<y>260</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p55</id>
		<x>1740</x>
		<y>220</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p56</id>
		<x>1900</x>
		<y>340</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p57</id>
		<x>620</x>
		<y>500</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<!-- ARCS -->
	<arc>
		<id>a8</id>
		<type>regular</type>
		<sourceId>p5</sourceId>
		<destinationId>t5</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a14</id>
		<type>regular</type>
		<sourceId>p8</sourceId>
		<destinationId>t8</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a15</id>
		<type>regular</type>
		<sourceId>t8</sourceId>
		<destinationId>p9</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a24</id>
		<type>regular</type>
		<sourceId>p8</sourceId>
		<destinationId>t14</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a43</id>
		<type>regular</type>
		<sourceId>t20</sourceId>
		<destinationId>p18</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a51</id>
		<type>regular</type>
		<sourceId>t14</sourceId>
		<destinationId>p22</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a52</id>
		<type>regular</type>
		<sourceId>p22</sourceId>
		<destinationId>t6</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a53</id>
		<type>regular</type>
		<sourceId>t5</sourceId>
		<destinationId>p22</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a62</id>
		<type>regular</type>
		<sourceId>p19</sourceId>
		<destinationId>t30</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a63</id>
		<type>regular</type>
		<sourceId>t30</sourceId>
		<destinationId>p26</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a71</id>
		<type>read</type>
		<sourceId>p29</sourceId>
		<destinationId>t33</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a74</id>
		<type>regular</type>
		<sourceId>t22</sourceId>
		<destinationId>p30</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a75</id>
		<type>regular</type>
		<sourceId>t21</sourceId>
		<destinationId>p30</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a76</id>
		<type>regular</type>
		<sourceId>p30</sourceId>
		<destinationId>t23</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a77</id>
		<type>regular</type>
		<sourceId>t23</sourceId>
		<destinationId>p19</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a78</id>
		<type>regular</type>
		<sourceId>t6</sourceId>
		<destinationId>p8</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a89</id>
		<type>regular</type>
		<sourceId>t27</sourceId>
		<destinationId>p29</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a95</id>
		<type>regular</type>
		<sourceId>p18</sourceId>
		<destinationId>t41</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a96</id>
		<type>regular</type>
		<sourceId>t41</sourceId>
		<destinationId>p34</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a98</id>
		<type>regular</type>
		<sourceId>p18</sourceId>
		<destinationId>t43</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a99</id>
		<type>regular</type>
		<sourceId>t43</sourceId>
		<destinationId>p35</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a101</id>
		<type>regular</type>
		<sourceId>p34</sourceId>
		<destinationId>t21</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a102</id>
		<type>regular</type>
		<sourceId>p35</sourceId>
		<destinationId>t22</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a103</id>
		<type>regular</type>
		<sourceId>p9</sourceId>
		<destinationId>t20</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a134</id>
		<type>regular</type>
		<sourceId>p19</sourceId>
		<destinationId>t62</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a144</id>
		<type>regular</type>
		<sourceId>t8</sourceId>
		<destinationId>p54</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a145</id>
		<type>read</type>
		<sourceId>p54</sourceId>
		<destinationId>t65</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a146</id>
		<type>read</type>
		<sourceId>p55</sourceId>
		<destinationId>t64</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a147</id>
		<type>regular</type>
		<sourceId>t23</sourceId>
		<destinationId>p55</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a148</id>
		<type>regular</type>
		<sourceId>t62</sourceId>
		<destinationId>p56</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a153</id>
		<type>regular</type>
		<sourceId>t8</sourceId>
		<destinationId>p57</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a154</id>
		<type>regular</type>
		<sourceId>p57</sourceId>
		<destinationId>t27</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a155</id>
		<type>regular</type>
		<sourceId>t27</sourceId>
		<destinationId>p57</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>
